<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nsu.micromovie.dao.CollectionMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nsu.micromovie.model.Collection">
    <id column="collectionid" jdbcType="INTEGER" property="collectionid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="movieid" jdbcType="INTEGER" property="moveid" />
  </resultMap>
  <sql id="Base_Column_List">
    collectionid, uid, movieid
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collection
    where collectionid = #{collectionid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collection
    where collectionid = #{collectionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nsu.micromovie.model.Collection">
    insert into collection (collectionid, uid, movieid
      )
    values (#{collectionid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{moveid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nsu.micromovie.model.Collection">
    insert into collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collectionid != null">
        collectionid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="moveid != null">
        movieid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collectionid != null">
        #{collectionid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="moveid != null">
        #{moveid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nsu.micromovie.model.Collection">
    update collection
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="moveid != null">
        movieid = #{moveid,jdbcType=INTEGER},
      </if>
    </set>
    where collectionid = #{collectionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nsu.micromovie.model.Collection">
    update collection
    set uid = #{uid,jdbcType=INTEGER},
      movieid = #{movieid,jdbcType=INTEGER}
    where collectionid = #{collectionid,jdbcType=INTEGER}
  </update>
  <select id="selectByFilter" resultMap="BaseResultMap" parameterType="cn.edu.nsu.micromovie.Filter.CollectionFilter">
    select
    <include refid="Base_Column_List" />
    from collection
    where 1=1
    <if test="useId!=null and useId!=''">
      and uid = #{useId,jdbcType=INTEGER}
    </if>
    <if test="rows!=null and offset != null">
      limit #{rows,jdbcType=INTEGER},
      #{offset,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectLike" resultType="int">
    select labelid
    from collection LEFT JOIN movie on collection.movieid = movie.id
    where uid = #{userId,jdbcType=INTEGER}
    and labelid != #{scoreLabelId,jdbcType=INTEGER}
    GROUP BY labelid
    ORDER BY count(labelid) desc
    LIMIT 1
  </select>
</mapper>