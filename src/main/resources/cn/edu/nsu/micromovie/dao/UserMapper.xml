<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nsu.micromovie.dao.UserMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nsu.micromovie.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="phonenumber" jdbcType="BIGINT" property="phonenumber" />
    <result column="passworld" jdbcType="VARCHAR" property="passworld" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="headportrait" jdbcType="VARCHAR" property="headportrait" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="freeze" jdbcType="INTEGER" property="freeze" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, mail, phonenumber, passworld, salt, headportrait, introduction, freeze
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nsu.micromovie.model.User">
    insert into user (id, name, mail, 
      phonenumber, passworld, salt, 
      headportrait, introduction, freeze
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{phonenumber,jdbcType=BIGINT}, #{passworld,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{headportrait,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{freeze,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nsu.micromovie.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="phonenumber != null">
        phonenumber,
      </if>
      <if test="passworld != null">
        passworld,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="headportrait != null">
        headportrait,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="freeze != null">
        freeze,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=BIGINT},
      </if>
      <if test="passworld != null">
        #{passworld,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="headportrait != null">
        #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="freeze != null">
        #{freeze,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nsu.micromovie.model.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null">
        phonenumber = #{phonenumber,jdbcType=BIGINT},
      </if>
      <if test="passworld != null">
        passworld = #{passworld,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="headportrait != null">
        headportrait = #{headportrait,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="freeze != null">
        freeze = #{freeze,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nsu.micromovie.model.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=BIGINT},
      passworld = #{passworld,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      headportrait = #{headportrait,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      freeze = #{freeze,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByName" resultMap="BaseResultMap" parameterType="String">
    select
    <include refid="Base_Column_List"/>
    from user
    where name=#{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByMail" resultMap="BaseResultMap" parameterType="String">
    select
    <include refid="Base_Column_List"/>
    from user
    where mail = #{mail,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="cn.edu.nsu.micromovie.Filter.UserFilter">
    select
    <include refid="Base_Column_List"/>
    from user
    <if test="rows != null and offset != null">
      limit #{rows,jdbcType=INTEGER},
      #{offset,jdbcType=INTEGER}
    </if>
  </select>
</mapper>